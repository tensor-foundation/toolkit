{
  "version": "0.0.0",
  "name": "solana_program_counter",
  "instructions": [
    {
      "name": "Create",
      "accounts": [
        {
          "name": "counter",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The program derived address of the counter account to create (seeds: ['counter', authority])"
          ]
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "The authority of the counter"
          ]
        },
        {
          "name": "payer",
          "isMut": true,
          "isSigner": true,
          "docs": [
            "The account paying for the storage fees"
          ]
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false,
          "docs": [
            "The system program"
          ]
        }
      ],
      "args": [
        {
          "name": "createMetadataAccountArgsV3",
          "type": {
            "defined": "CreateMetadataAccountArgsV3"
          }
        }
      ],
      "discriminant": {
        "type": "u8",
        "value": 0
      }
    },
    {
      "name": "Increment",
      "accounts": [
        {
          "name": "counter",
          "isMut": true,
          "isSigner": false,
          "docs": [
            "The program derived address of the counter account to increment (seeds: ['counter', authority])"
          ]
        },
        {
          "name": "authority",
          "isMut": false,
          "isSigner": true,
          "docs": [
            "The authority of the counter"
          ]
        }
      ],
      "args": [
        {
          "name": "amount",
          "type": {
            "option": "u32"
          }
        }
      ],
      "discriminant": {
        "type": "u8",
        "value": 1
      }
    }
  ],
  "accounts": [
    {
      "name": "Counter",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "key",
            "type": {
              "defined": "Key"
            }
          },
          {
            "name": "authority",
            "type": "publicKey"
          },
          {
            "name": "value",
            "type": "u32"
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "Key",
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Uninitialized"
          },
          {
            "name": "Counter"
          }
        ]
      }
    },
    {
      "name": "CreateMetadataAccountArgsV3",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "data",
            "type": {
              "defined": "DataV2"
            }
          },
          {
            "name": "isMutable",
            "type": "bool"
          },
          {
            "name": "collectionDetails",
            "type": {
              "option": {
                "defined": "CollectionDetails"
              }
            }
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 0,
      "name": "DeserializationError",
      "msg": "Error deserializing an account"
    },
    {
      "code": 1,
      "name": "SerializationError",
      "msg": "Error serializing an account"
    },
    {
      "code": 2,
      "name": "InvalidProgramOwner",
      "msg": "Invalid program owner. This likely mean the provided account does not exist"
    },
    {
      "code": 3,
      "name": "InvalidPda",
      "msg": "Invalid PDA derivation"
    },
    {
      "code": 4,
      "name": "ExpectedEmptyAccount",
      "msg": "Expected empty account"
    },
    {
      "code": 5,
      "name": "ExpectedNonEmptyAccount",
      "msg": "Expected non empty account"
    },
    {
      "code": 6,
      "name": "ExpectedSignerAccount",
      "msg": "Expected signer account"
    },
    {
      "code": 7,
      "name": "ExpectedWritableAccount",
      "msg": "Expected writable account"
    },
    {
      "code": 8,
      "name": "AccountMismatch",
      "msg": "Account mismatch"
    },
    {
      "code": 9,
      "name": "InvalidAccountKey",
      "msg": "Invalid account key"
    },
    {
      "code": 10,
      "name": "NumericalOverflow",
      "msg": "Numerical overflow"
    }
  ],
  "metadata": {
    "origin": "shank",
    "address": "CounterProgram111111111111111111111111111111",
    "binaryVersion": "0.4.2",
    "libVersion": "^0.4.2"
  }
}