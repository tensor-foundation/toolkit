/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getMapDecoder,
  getMapEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
} from '@solana/web3.js';
import {
  PayloadType,
  PayloadTypeArgs,
  getPayloadTypeDecoder,
  getPayloadTypeEncoder,
} from '.';

export type Payload = { map: Map<string, PayloadType> };

export type PayloadArgs = { map: Map<string, PayloadTypeArgs> };

export function getPayloadEncoder(): Encoder<PayloadArgs> {
  return getStructEncoder([
    [
      'map',
      getMapEncoder(
        addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder()),
        getPayloadTypeEncoder()
      ),
    ],
  ]);
}

export function getPayloadDecoder(): Decoder<Payload> {
  return getStructDecoder([
    [
      'map',
      getMapDecoder(
        addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder()),
        getPayloadTypeDecoder()
      ),
    ],
  ]);
}

export function getPayloadCodec(): Codec<PayloadArgs, Payload> {
  return combineCodec(getPayloadEncoder(), getPayloadDecoder());
}
