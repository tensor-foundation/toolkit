/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getArrayDecoder,
  getArrayEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from '@solana/web3.js';

export type ProofInfo = { proof: Array<ReadonlyUint8Array> };

export type ProofInfoArgs = ProofInfo;

export function getProofInfoEncoder(): Encoder<ProofInfoArgs> {
  return getStructEncoder([
    ['proof', getArrayEncoder(fixEncoderSize(getBytesEncoder(), 32))],
  ]);
}

export function getProofInfoDecoder(): Decoder<ProofInfo> {
  return getStructDecoder([
    ['proof', getArrayDecoder(fixDecoderSize(getBytesDecoder(), 32))],
  ]);
}

export function getProofInfoCodec(): Codec<ProofInfoArgs, ProofInfo> {
  return combineCodec(getProofInfoEncoder(), getProofInfoDecoder());
}
