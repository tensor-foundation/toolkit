/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  GetDiscriminatedUnionVariant,
  GetDiscriminatedUnionVariantContent,
  combineCodec,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
} from '@solana/web3.js';
import {
  ApplicationDataEvent,
  ApplicationDataEventArgs,
  ChangeLogEvent,
  ChangeLogEventArgs,
  getApplicationDataEventDecoder,
  getApplicationDataEventEncoder,
  getChangeLogEventDecoder,
  getChangeLogEventEncoder,
} from '.';

export type AccountCompressionEvent =
  | { __kind: 'ChangeLog'; fields: readonly [ChangeLogEvent] }
  | { __kind: 'ApplicationData'; fields: readonly [ApplicationDataEvent] };

export type AccountCompressionEventArgs =
  | { __kind: 'ChangeLog'; fields: readonly [ChangeLogEventArgs] }
  | { __kind: 'ApplicationData'; fields: readonly [ApplicationDataEventArgs] };

export function getAccountCompressionEventEncoder(): Encoder<AccountCompressionEventArgs> {
  return getDiscriminatedUnionEncoder([
    [
      'ChangeLog',
      getStructEncoder([
        ['fields', getTupleEncoder([getChangeLogEventEncoder()])],
      ]),
    ],
    [
      'ApplicationData',
      getStructEncoder([
        ['fields', getTupleEncoder([getApplicationDataEventEncoder()])],
      ]),
    ],
  ]);
}

export function getAccountCompressionEventDecoder(): Decoder<AccountCompressionEvent> {
  return getDiscriminatedUnionDecoder([
    [
      'ChangeLog',
      getStructDecoder([
        ['fields', getTupleDecoder([getChangeLogEventDecoder()])],
      ]),
    ],
    [
      'ApplicationData',
      getStructDecoder([
        ['fields', getTupleDecoder([getApplicationDataEventDecoder()])],
      ]),
    ],
  ]);
}

export function getAccountCompressionEventCodec(): Codec<
  AccountCompressionEventArgs,
  AccountCompressionEvent
> {
  return combineCodec(
    getAccountCompressionEventEncoder(),
    getAccountCompressionEventDecoder()
  );
}

// Data Enum Helpers.
export function accountCompressionEvent(
  kind: 'ChangeLog',
  data: GetDiscriminatedUnionVariantContent<
    AccountCompressionEventArgs,
    '__kind',
    'ChangeLog'
  >['fields']
): GetDiscriminatedUnionVariant<
  AccountCompressionEventArgs,
  '__kind',
  'ChangeLog'
>;
export function accountCompressionEvent(
  kind: 'ApplicationData',
  data: GetDiscriminatedUnionVariantContent<
    AccountCompressionEventArgs,
    '__kind',
    'ApplicationData'
  >['fields']
): GetDiscriminatedUnionVariant<
  AccountCompressionEventArgs,
  '__kind',
  'ApplicationData'
>;
export function accountCompressionEvent<
  K extends AccountCompressionEventArgs['__kind'],
  Data,
>(kind: K, data?: Data) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isAccountCompressionEvent<
  K extends AccountCompressionEvent['__kind'],
>(
  kind: K,
  value: AccountCompressionEvent
): value is AccountCompressionEvent & { __kind: K } {
  return value.__kind === kind;
}
