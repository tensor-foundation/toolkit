/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Address,
  Codec,
  Decoder,
  Encoder,
  GetDiscriminatedUnionVariant,
  GetDiscriminatedUnionVariantContent,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getDiscriminatedUnionDecoder,
  getDiscriminatedUnionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
  getUnitDecoder,
  getUnitEncoder,
} from '@solana/web3.js';

export type UpdateAuthority =
  | { __kind: 'None' }
  | { __kind: 'Address'; fields: readonly [Address] }
  | { __kind: 'Collection'; fields: readonly [Address] };

export type UpdateAuthorityArgs = UpdateAuthority;

export function getUpdateAuthorityEncoder(): Encoder<UpdateAuthorityArgs> {
  return getDiscriminatedUnionEncoder([
    ['None', getUnitEncoder()],
    [
      'Address',
      getStructEncoder([['fields', getTupleEncoder([getAddressEncoder()])]]),
    ],
    [
      'Collection',
      getStructEncoder([['fields', getTupleEncoder([getAddressEncoder()])]]),
    ],
  ]);
}

export function getUpdateAuthorityDecoder(): Decoder<UpdateAuthority> {
  return getDiscriminatedUnionDecoder([
    ['None', getUnitDecoder()],
    [
      'Address',
      getStructDecoder([['fields', getTupleDecoder([getAddressDecoder()])]]),
    ],
    [
      'Collection',
      getStructDecoder([['fields', getTupleDecoder([getAddressDecoder()])]]),
    ],
  ]);
}

export function getUpdateAuthorityCodec(): Codec<
  UpdateAuthorityArgs,
  UpdateAuthority
> {
  return combineCodec(getUpdateAuthorityEncoder(), getUpdateAuthorityDecoder());
}

// Data Enum Helpers.
export function updateAuthority(
  kind: 'None'
): GetDiscriminatedUnionVariant<UpdateAuthorityArgs, '__kind', 'None'>;
export function updateAuthority(
  kind: 'Address',
  data: GetDiscriminatedUnionVariantContent<
    UpdateAuthorityArgs,
    '__kind',
    'Address'
  >['fields']
): GetDiscriminatedUnionVariant<UpdateAuthorityArgs, '__kind', 'Address'>;
export function updateAuthority(
  kind: 'Collection',
  data: GetDiscriminatedUnionVariantContent<
    UpdateAuthorityArgs,
    '__kind',
    'Collection'
  >['fields']
): GetDiscriminatedUnionVariant<UpdateAuthorityArgs, '__kind', 'Collection'>;
export function updateAuthority<K extends UpdateAuthorityArgs['__kind'], Data>(
  kind: K,
  data?: Data
) {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isUpdateAuthority<K extends UpdateAuthority['__kind']>(
  kind: K,
  value: UpdateAuthority
): value is UpdateAuthority & { __kind: K } {
  return value.__kind === kind;
}
