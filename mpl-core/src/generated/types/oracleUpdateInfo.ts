/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/kinobi-so/kinobi
 */

import {
  Codec,
  Decoder,
  Encoder,
  Option,
  OptionOrNullable,
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getTupleDecoder,
  getTupleEncoder,
} from '@solana/web3.js';
import {
  ExternalCheckResult,
  ExternalCheckResultArgs,
  ExtraAccount,
  ExtraAccountArgs,
  HookableLifecycleEvent,
  HookableLifecycleEventArgs,
  ValidationResultsOffset,
  ValidationResultsOffsetArgs,
  getExternalCheckResultDecoder,
  getExternalCheckResultEncoder,
  getExtraAccountDecoder,
  getExtraAccountEncoder,
  getHookableLifecycleEventDecoder,
  getHookableLifecycleEventEncoder,
  getValidationResultsOffsetDecoder,
  getValidationResultsOffsetEncoder,
} from '.';

export type OracleUpdateInfo = {
  lifecycleChecks: Option<
    Array<readonly [HookableLifecycleEvent, ExternalCheckResult]>
  >;
  baseAddressConfig: Option<ExtraAccount>;
  resultsOffset: Option<ValidationResultsOffset>;
};

export type OracleUpdateInfoArgs = {
  lifecycleChecks: OptionOrNullable<
    Array<readonly [HookableLifecycleEventArgs, ExternalCheckResultArgs]>
  >;
  baseAddressConfig: OptionOrNullable<ExtraAccountArgs>;
  resultsOffset: OptionOrNullable<ValidationResultsOffsetArgs>;
};

export function getOracleUpdateInfoEncoder(): Encoder<OracleUpdateInfoArgs> {
  return getStructEncoder([
    [
      'lifecycleChecks',
      getOptionEncoder(
        getArrayEncoder(
          getTupleEncoder([
            getHookableLifecycleEventEncoder(),
            getExternalCheckResultEncoder(),
          ])
        )
      ),
    ],
    ['baseAddressConfig', getOptionEncoder(getExtraAccountEncoder())],
    ['resultsOffset', getOptionEncoder(getValidationResultsOffsetEncoder())],
  ]);
}

export function getOracleUpdateInfoDecoder(): Decoder<OracleUpdateInfo> {
  return getStructDecoder([
    [
      'lifecycleChecks',
      getOptionDecoder(
        getArrayDecoder(
          getTupleDecoder([
            getHookableLifecycleEventDecoder(),
            getExternalCheckResultDecoder(),
          ])
        )
      ),
    ],
    ['baseAddressConfig', getOptionDecoder(getExtraAccountDecoder())],
    ['resultsOffset', getOptionDecoder(getValidationResultsOffsetDecoder())],
  ]);
}

export function getOracleUpdateInfoCodec(): Codec<
  OracleUpdateInfoArgs,
  OracleUpdateInfo
> {
  return combineCodec(
    getOracleUpdateInfoEncoder(),
    getOracleUpdateInfoDecoder()
  );
}
