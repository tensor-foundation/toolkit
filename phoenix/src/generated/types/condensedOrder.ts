/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from '@solana/web3.js';

export type CondensedOrder = {
  priceInTicks: bigint;
  sizeInBaseLots: bigint;
  lastValidSlot: Option<bigint>;
  lastValidUnixTimestampInSeconds: Option<bigint>;
};

export type CondensedOrderArgs = {
  priceInTicks: number | bigint;
  sizeInBaseLots: number | bigint;
  lastValidSlot: OptionOrNullable<number | bigint>;
  lastValidUnixTimestampInSeconds: OptionOrNullable<number | bigint>;
};

export function getCondensedOrderEncoder(): Encoder<CondensedOrderArgs> {
  return getStructEncoder([
    ['priceInTicks', getU64Encoder()],
    ['sizeInBaseLots', getU64Encoder()],
    ['lastValidSlot', getOptionEncoder(getU64Encoder())],
    ['lastValidUnixTimestampInSeconds', getOptionEncoder(getU64Encoder())],
  ]);
}

export function getCondensedOrderDecoder(): Decoder<CondensedOrder> {
  return getStructDecoder([
    ['priceInTicks', getU64Decoder()],
    ['sizeInBaseLots', getU64Decoder()],
    ['lastValidSlot', getOptionDecoder(getU64Decoder())],
    ['lastValidUnixTimestampInSeconds', getOptionDecoder(getU64Decoder())],
  ]);
}

export function getCondensedOrderCodec(): Codec<
  CondensedOrderArgs,
  CondensedOrder
> {
  return combineCodec(getCondensedOrderEncoder(), getCondensedOrderDecoder());
}
