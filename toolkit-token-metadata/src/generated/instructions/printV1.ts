/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import { Address } from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  mapEncoder,
} from '@solana/codecs';
import {
  AccountRole,
  IAccountMeta,
  IInstruction,
  IInstructionWithAccounts,
  IInstructionWithData,
  ReadonlyAccount,
  ReadonlySignerAccount,
  WritableAccount,
  WritableSignerAccount,
} from '@solana/instructions';
import { IAccountSignerMeta, TransactionSigner } from '@solana/signers';
import {
  findMasterEditionPda,
  findMetadataPda,
  findTokenRecordPda,
} from '../pdas';
import {
  ResolvedAccount,
  accountMetaWithDefault,
  expectAddress,
  expectSome,
  getAccountMetasWithSigners,
} from '../shared';
import { TokenStandard, TokenStandardArgs } from '../types';

export type PrintV1Instruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountEditionMetadata extends string | IAccountMeta<string> = string,
  TAccountEdition extends string | IAccountMeta<string> = string,
  TAccountEditionMint extends string | IAccountMeta<string> = string,
  TAccountEditionTokenAccountOwner extends
    | string
    | IAccountMeta<string> = string,
  TAccountEditionTokenAccount extends string | IAccountMeta<string> = string,
  TAccountEditionMintAuthority extends string | IAccountMeta<string> = string,
  TAccountEditionTokenRecord extends string | IAccountMeta<string> = string,
  TAccountMasterEdition extends string | IAccountMeta<string> = string,
  TAccountEditionMarkerPda extends string | IAccountMeta<string> = string,
  TAccountPayer extends string | IAccountMeta<string> = string,
  TAccountMasterTokenAccountOwner extends
    | string
    | IAccountMeta<string> = string,
  TAccountMasterTokenAccount extends string | IAccountMeta<string> = string,
  TAccountMasterMetadata extends string | IAccountMeta<string> = string,
  TAccountUpdateAuthority extends string | IAccountMeta<string> = string,
  TAccountSplTokenProgram extends
    | string
    | IAccountMeta<string> = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountSplAtaProgram extends
    | string
    | IAccountMeta<string> = 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',
  TAccountSysvarInstructions extends
    | string
    | IAccountMeta<string> = 'Sysvar1nstructions1111111111111111111111111',
  TAccountSystemProgram extends
    | string
    | IAccountMeta<string> = '11111111111111111111111111111111',
  TRemainingAccounts extends Array<IAccountMeta<string>> = [],
> = IInstruction<TProgram> &
  IInstructionWithData<Uint8Array> &
  IInstructionWithAccounts<
    [
      TAccountEditionMetadata extends string
        ? WritableAccount<TAccountEditionMetadata>
        : TAccountEditionMetadata,
      TAccountEdition extends string
        ? WritableAccount<TAccountEdition>
        : TAccountEdition,
      TAccountEditionMint extends string
        ? WritableAccount<TAccountEditionMint>
        : TAccountEditionMint,
      TAccountEditionTokenAccountOwner extends string
        ? ReadonlyAccount<TAccountEditionTokenAccountOwner>
        : TAccountEditionTokenAccountOwner,
      TAccountEditionTokenAccount extends string
        ? WritableAccount<TAccountEditionTokenAccount>
        : TAccountEditionTokenAccount,
      TAccountEditionMintAuthority extends string
        ? ReadonlySignerAccount<TAccountEditionMintAuthority>
        : TAccountEditionMintAuthority,
      TAccountEditionTokenRecord extends string
        ? WritableAccount<TAccountEditionTokenRecord>
        : TAccountEditionTokenRecord,
      TAccountMasterEdition extends string
        ? WritableAccount<TAccountMasterEdition>
        : TAccountMasterEdition,
      TAccountEditionMarkerPda extends string
        ? WritableAccount<TAccountEditionMarkerPda>
        : TAccountEditionMarkerPda,
      TAccountPayer extends string
        ? WritableSignerAccount<TAccountPayer>
        : TAccountPayer,
      TAccountMasterTokenAccountOwner extends string
        ? ReadonlySignerAccount<TAccountMasterTokenAccountOwner>
        : TAccountMasterTokenAccountOwner,
      TAccountMasterTokenAccount extends string
        ? ReadonlyAccount<TAccountMasterTokenAccount>
        : TAccountMasterTokenAccount,
      TAccountMasterMetadata extends string
        ? ReadonlyAccount<TAccountMasterMetadata>
        : TAccountMasterMetadata,
      TAccountUpdateAuthority extends string
        ? ReadonlyAccount<TAccountUpdateAuthority>
        : TAccountUpdateAuthority,
      TAccountSplTokenProgram extends string
        ? ReadonlyAccount<TAccountSplTokenProgram>
        : TAccountSplTokenProgram,
      TAccountSplAtaProgram extends string
        ? ReadonlyAccount<TAccountSplAtaProgram>
        : TAccountSplAtaProgram,
      TAccountSysvarInstructions extends string
        ? ReadonlyAccount<TAccountSysvarInstructions>
        : TAccountSysvarInstructions,
      TAccountSystemProgram extends string
        ? ReadonlyAccount<TAccountSystemProgram>
        : TAccountSystemProgram,
      ...TRemainingAccounts,
    ]
  >;

export type PrintV1InstructionWithSigners<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountEditionMetadata extends string | IAccountMeta<string> = string,
  TAccountEdition extends string | IAccountMeta<string> = string,
  TAccountEditionMint extends string | IAccountMeta<string> = string,
  TAccountEditionTokenAccountOwner extends
    | string
    | IAccountMeta<string> = string,
  TAccountEditionTokenAccount extends string | IAccountMeta<string> = string,
  TAccountEditionMintAuthority extends string | IAccountMeta<string> = string,
  TAccountEditionTokenRecord extends string | IAccountMeta<string> = string,
  TAccountMasterEdition extends string | IAccountMeta<string> = string,
  TAccountEditionMarkerPda extends string | IAccountMeta<string> = string,
  TAccountPayer extends string | IAccountMeta<string> = string,
  TAccountMasterTokenAccountOwner extends
    | string
    | IAccountMeta<string> = string,
  TAccountMasterTokenAccount extends string | IAccountMeta<string> = string,
  TAccountMasterMetadata extends string | IAccountMeta<string> = string,
  TAccountUpdateAuthority extends string | IAccountMeta<string> = string,
  TAccountSplTokenProgram extends
    | string
    | IAccountMeta<string> = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountSplAtaProgram extends
    | string
    | IAccountMeta<string> = 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',
  TAccountSysvarInstructions extends
    | string
    | IAccountMeta<string> = 'Sysvar1nstructions1111111111111111111111111',
  TAccountSystemProgram extends
    | string
    | IAccountMeta<string> = '11111111111111111111111111111111',
  TRemainingAccounts extends Array<IAccountMeta<string>> = [],
> = IInstruction<TProgram> &
  IInstructionWithData<Uint8Array> &
  IInstructionWithAccounts<
    [
      TAccountEditionMetadata extends string
        ? WritableAccount<TAccountEditionMetadata>
        : TAccountEditionMetadata,
      TAccountEdition extends string
        ? WritableAccount<TAccountEdition>
        : TAccountEdition,
      TAccountEditionMint extends string
        ? WritableAccount<TAccountEditionMint>
        : TAccountEditionMint,
      TAccountEditionTokenAccountOwner extends string
        ? ReadonlyAccount<TAccountEditionTokenAccountOwner>
        : TAccountEditionTokenAccountOwner,
      TAccountEditionTokenAccount extends string
        ? WritableAccount<TAccountEditionTokenAccount>
        : TAccountEditionTokenAccount,
      TAccountEditionMintAuthority extends string
        ? ReadonlySignerAccount<TAccountEditionMintAuthority> &
            IAccountSignerMeta<TAccountEditionMintAuthority>
        : TAccountEditionMintAuthority,
      TAccountEditionTokenRecord extends string
        ? WritableAccount<TAccountEditionTokenRecord>
        : TAccountEditionTokenRecord,
      TAccountMasterEdition extends string
        ? WritableAccount<TAccountMasterEdition>
        : TAccountMasterEdition,
      TAccountEditionMarkerPda extends string
        ? WritableAccount<TAccountEditionMarkerPda>
        : TAccountEditionMarkerPda,
      TAccountPayer extends string
        ? WritableSignerAccount<TAccountPayer> &
            IAccountSignerMeta<TAccountPayer>
        : TAccountPayer,
      TAccountMasterTokenAccountOwner extends string
        ? ReadonlySignerAccount<TAccountMasterTokenAccountOwner> &
            IAccountSignerMeta<TAccountMasterTokenAccountOwner>
        : TAccountMasterTokenAccountOwner,
      TAccountMasterTokenAccount extends string
        ? ReadonlyAccount<TAccountMasterTokenAccount>
        : TAccountMasterTokenAccount,
      TAccountMasterMetadata extends string
        ? ReadonlyAccount<TAccountMasterMetadata>
        : TAccountMasterMetadata,
      TAccountUpdateAuthority extends string
        ? ReadonlyAccount<TAccountUpdateAuthority>
        : TAccountUpdateAuthority,
      TAccountSplTokenProgram extends string
        ? ReadonlyAccount<TAccountSplTokenProgram>
        : TAccountSplTokenProgram,
      TAccountSplAtaProgram extends string
        ? ReadonlyAccount<TAccountSplAtaProgram>
        : TAccountSplAtaProgram,
      TAccountSysvarInstructions extends string
        ? ReadonlyAccount<TAccountSysvarInstructions>
        : TAccountSysvarInstructions,
      TAccountSystemProgram extends string
        ? ReadonlyAccount<TAccountSystemProgram>
        : TAccountSystemProgram,
      ...TRemainingAccounts,
    ]
  >;

export type PrintV1InstructionData = {
  discriminator: number;
  printV1Discriminator: number;
  editionNumber: bigint;
};

export type PrintV1InstructionDataArgs = { editionNumber: number | bigint };

export function getPrintV1InstructionDataEncoder(): Encoder<PrintV1InstructionDataArgs> {
  return mapEncoder(
    getStructEncoder([
      ['discriminator', getU8Encoder()],
      ['printV1Discriminator', getU8Encoder()],
      ['editionNumber', getU64Encoder()],
    ]),
    (value) => ({ ...value, discriminator: 55, printV1Discriminator: 0 })
  );
}

export function getPrintV1InstructionDataDecoder(): Decoder<PrintV1InstructionData> {
  return getStructDecoder([
    ['discriminator', getU8Decoder()],
    ['printV1Discriminator', getU8Decoder()],
    ['editionNumber', getU64Decoder()],
  ]);
}

export function getPrintV1InstructionDataCodec(): Codec<
  PrintV1InstructionDataArgs,
  PrintV1InstructionData
> {
  return combineCodec(
    getPrintV1InstructionDataEncoder(),
    getPrintV1InstructionDataDecoder()
  );
}

export type PrintV1InstructionExtraArgs = {
  masterEditionMint: Address;
  tokenStandard: TokenStandardArgs;
};

export type PrintV1AsyncInput<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
> = {
  /** New Metadata key (pda of ['metadata', program id, mint id]) */
  editionMetadata?: Address<TAccountEditionMetadata>;
  /** New Edition (pda of ['metadata', program id, mint id, 'edition']) */
  edition?: Address<TAccountEdition>;
  /** Mint of new token - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY */
  editionMint: Address<TAccountEditionMint>;
  /** Owner of the token account of new token */
  editionTokenAccountOwner: Address<TAccountEditionTokenAccountOwner>;
  /** Token account of new token */
  editionTokenAccount: Address<TAccountEditionTokenAccount>;
  /** Mint authority of new mint */
  editionMintAuthority?: Address<TAccountEditionMintAuthority>;
  /** Token record account */
  editionTokenRecord?: Address<TAccountEditionTokenRecord>;
  /** Master Record Edition V2 (pda of ['metadata', program id, master metadata mint id, 'edition']) */
  masterEdition?: Address<TAccountMasterEdition>;
  /** Edition pda to mark creation - will be checked for pre-existence. (pda of ['metadata', program id, master metadata mint id, 'edition', edition_number]) where edition_number is NOT the edition number you pass in args but actually edition_number = floor(edition/EDITION_MARKER_BIT_SIZE). */
  editionMarkerPda: Address<TAccountEditionMarkerPda>;
  /** payer */
  payer: Address<TAccountPayer>;
  /** owner of token account containing master token */
  masterTokenAccountOwner: Address<TAccountMasterTokenAccountOwner>;
  /** token account containing token from master metadata mint */
  masterTokenAccount: Address<TAccountMasterTokenAccount>;
  /** Master record metadata account */
  masterMetadata?: Address<TAccountMasterMetadata>;
  /** The update authority of the master edition. */
  updateAuthority: Address<TAccountUpdateAuthority>;
  /** Token program */
  splTokenProgram?: Address<TAccountSplTokenProgram>;
  /** SPL Associated Token Account program */
  splAtaProgram?: Address<TAccountSplAtaProgram>;
  /** Instructions sysvar account */
  sysvarInstructions?: Address<TAccountSysvarInstructions>;
  /** System program */
  systemProgram?: Address<TAccountSystemProgram>;
  editionNumber: PrintV1InstructionDataArgs['editionNumber'];
  masterEditionMint: PrintV1InstructionExtraArgs['masterEditionMint'];
  tokenStandard: PrintV1InstructionExtraArgs['tokenStandard'];
};

export type PrintV1AsyncInputWithSigners<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
> = {
  /** New Metadata key (pda of ['metadata', program id, mint id]) */
  editionMetadata?: Address<TAccountEditionMetadata>;
  /** New Edition (pda of ['metadata', program id, mint id, 'edition']) */
  edition?: Address<TAccountEdition>;
  /** Mint of new token - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY */
  editionMint:
    | Address<TAccountEditionMint>
    | TransactionSigner<TAccountEditionMint>;
  /** Owner of the token account of new token */
  editionTokenAccountOwner: Address<TAccountEditionTokenAccountOwner>;
  /** Token account of new token */
  editionTokenAccount: Address<TAccountEditionTokenAccount>;
  /** Mint authority of new mint */
  editionMintAuthority?: TransactionSigner<TAccountEditionMintAuthority>;
  /** Token record account */
  editionTokenRecord?: Address<TAccountEditionTokenRecord>;
  /** Master Record Edition V2 (pda of ['metadata', program id, master metadata mint id, 'edition']) */
  masterEdition?: Address<TAccountMasterEdition>;
  /** Edition pda to mark creation - will be checked for pre-existence. (pda of ['metadata', program id, master metadata mint id, 'edition', edition_number]) where edition_number is NOT the edition number you pass in args but actually edition_number = floor(edition/EDITION_MARKER_BIT_SIZE). */
  editionMarkerPda: Address<TAccountEditionMarkerPda>;
  /** payer */
  payer: TransactionSigner<TAccountPayer>;
  /** owner of token account containing master token */
  masterTokenAccountOwner: TransactionSigner<TAccountMasterTokenAccountOwner>;
  /** token account containing token from master metadata mint */
  masterTokenAccount: Address<TAccountMasterTokenAccount>;
  /** Master record metadata account */
  masterMetadata?: Address<TAccountMasterMetadata>;
  /** The update authority of the master edition. */
  updateAuthority: Address<TAccountUpdateAuthority>;
  /** Token program */
  splTokenProgram?: Address<TAccountSplTokenProgram>;
  /** SPL Associated Token Account program */
  splAtaProgram?: Address<TAccountSplAtaProgram>;
  /** Instructions sysvar account */
  sysvarInstructions?: Address<TAccountSysvarInstructions>;
  /** System program */
  systemProgram?: Address<TAccountSystemProgram>;
  editionNumber: PrintV1InstructionDataArgs['editionNumber'];
  masterEditionMint: PrintV1InstructionExtraArgs['masterEditionMint'];
  tokenStandard: PrintV1InstructionExtraArgs['tokenStandard'];
};

export async function getPrintV1InstructionAsync<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
>(
  input: PrintV1AsyncInputWithSigners<
    TAccountEditionMetadata,
    TAccountEdition,
    TAccountEditionMint,
    TAccountEditionTokenAccountOwner,
    TAccountEditionTokenAccount,
    TAccountEditionMintAuthority,
    TAccountEditionTokenRecord,
    TAccountMasterEdition,
    TAccountEditionMarkerPda,
    TAccountPayer,
    TAccountMasterTokenAccountOwner,
    TAccountMasterTokenAccount,
    TAccountMasterMetadata,
    TAccountUpdateAuthority,
    TAccountSplTokenProgram,
    TAccountSplAtaProgram,
    TAccountSysvarInstructions,
    TAccountSystemProgram
  >
): Promise<
  PrintV1InstructionWithSigners<
    TProgram,
    TAccountEditionMetadata,
    TAccountEdition,
    (typeof input)['editionMint'] extends TransactionSigner<TAccountEditionMint>
      ? WritableSignerAccount<TAccountEditionMint> &
          IAccountSignerMeta<TAccountEditionMint>
      : TAccountEditionMint,
    TAccountEditionTokenAccountOwner,
    TAccountEditionTokenAccount,
    TAccountEditionMintAuthority,
    TAccountEditionTokenRecord,
    TAccountMasterEdition,
    TAccountEditionMarkerPda,
    TAccountPayer,
    TAccountMasterTokenAccountOwner,
    TAccountMasterTokenAccount,
    TAccountMasterMetadata,
    TAccountUpdateAuthority,
    TAccountSplTokenProgram,
    TAccountSplAtaProgram,
    TAccountSysvarInstructions,
    TAccountSystemProgram
  >
>;
export async function getPrintV1InstructionAsync<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
>(
  input: PrintV1AsyncInput<
    TAccountEditionMetadata,
    TAccountEdition,
    TAccountEditionMint,
    TAccountEditionTokenAccountOwner,
    TAccountEditionTokenAccount,
    TAccountEditionMintAuthority,
    TAccountEditionTokenRecord,
    TAccountMasterEdition,
    TAccountEditionMarkerPda,
    TAccountPayer,
    TAccountMasterTokenAccountOwner,
    TAccountMasterTokenAccount,
    TAccountMasterMetadata,
    TAccountUpdateAuthority,
    TAccountSplTokenProgram,
    TAccountSplAtaProgram,
    TAccountSysvarInstructions,
    TAccountSystemProgram
  >
): Promise<
  PrintV1Instruction<
    TProgram,
    TAccountEditionMetadata,
    TAccountEdition,
    TAccountEditionMint,
    TAccountEditionTokenAccountOwner,
    TAccountEditionTokenAccount,
    TAccountEditionMintAuthority,
    TAccountEditionTokenRecord,
    TAccountMasterEdition,
    TAccountEditionMarkerPda,
    TAccountPayer,
    TAccountMasterTokenAccountOwner,
    TAccountMasterTokenAccount,
    TAccountMasterMetadata,
    TAccountUpdateAuthority,
    TAccountSplTokenProgram,
    TAccountSplAtaProgram,
    TAccountSysvarInstructions,
    TAccountSystemProgram
  >
>;
export async function getPrintV1InstructionAsync<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
>(
  input: PrintV1AsyncInput<
    TAccountEditionMetadata,
    TAccountEdition,
    TAccountEditionMint,
    TAccountEditionTokenAccountOwner,
    TAccountEditionTokenAccount,
    TAccountEditionMintAuthority,
    TAccountEditionTokenRecord,
    TAccountMasterEdition,
    TAccountEditionMarkerPda,
    TAccountPayer,
    TAccountMasterTokenAccountOwner,
    TAccountMasterTokenAccount,
    TAccountMasterMetadata,
    TAccountUpdateAuthority,
    TAccountSplTokenProgram,
    TAccountSplAtaProgram,
    TAccountSysvarInstructions,
    TAccountSystemProgram
  >
): Promise<IInstruction> {
  // Program address.
  const programAddress =
    'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s' as Address<'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s'>;

  // Original accounts.
  type AccountMetas = Parameters<
    typeof getPrintV1InstructionRaw<
      TProgram,
      TAccountEditionMetadata,
      TAccountEdition,
      TAccountEditionMint,
      TAccountEditionTokenAccountOwner,
      TAccountEditionTokenAccount,
      TAccountEditionMintAuthority,
      TAccountEditionTokenRecord,
      TAccountMasterEdition,
      TAccountEditionMarkerPda,
      TAccountPayer,
      TAccountMasterTokenAccountOwner,
      TAccountMasterTokenAccount,
      TAccountMasterMetadata,
      TAccountUpdateAuthority,
      TAccountSplTokenProgram,
      TAccountSplAtaProgram,
      TAccountSysvarInstructions,
      TAccountSystemProgram
    >
  >[0];
  const accounts: Record<keyof AccountMetas, ResolvedAccount> = {
    editionMetadata: { value: input.editionMetadata ?? null, isWritable: true },
    edition: { value: input.edition ?? null, isWritable: true },
    editionMint: { value: input.editionMint ?? null, isWritable: true },
    editionTokenAccountOwner: {
      value: input.editionTokenAccountOwner ?? null,
      isWritable: false,
    },
    editionTokenAccount: {
      value: input.editionTokenAccount ?? null,
      isWritable: true,
    },
    editionMintAuthority: {
      value: input.editionMintAuthority ?? null,
      isWritable: false,
    },
    editionTokenRecord: {
      value: input.editionTokenRecord ?? null,
      isWritable: true,
    },
    masterEdition: { value: input.masterEdition ?? null, isWritable: true },
    editionMarkerPda: {
      value: input.editionMarkerPda ?? null,
      isWritable: true,
    },
    payer: { value: input.payer ?? null, isWritable: true },
    masterTokenAccountOwner: {
      value: input.masterTokenAccountOwner ?? null,
      isWritable: false,
    },
    masterTokenAccount: {
      value: input.masterTokenAccount ?? null,
      isWritable: false,
    },
    masterMetadata: { value: input.masterMetadata ?? null, isWritable: false },
    updateAuthority: {
      value: input.updateAuthority ?? null,
      isWritable: false,
    },
    splTokenProgram: {
      value: input.splTokenProgram ?? null,
      isWritable: false,
    },
    splAtaProgram: { value: input.splAtaProgram ?? null, isWritable: false },
    sysvarInstructions: {
      value: input.sysvarInstructions ?? null,
      isWritable: false,
    },
    systemProgram: { value: input.systemProgram ?? null, isWritable: false },
  };

  // Original args.
  const args = { ...input };

  // Resolve default values.
  if (!accounts.editionMetadata.value) {
    accounts.editionMetadata.value = await findMetadataPda({
      mint: expectAddress(accounts.editionMint.value),
    });
  }
  if (!accounts.edition.value) {
    accounts.edition.value = await findMasterEditionPda({
      mint: expectAddress(accounts.editionMint.value),
    });
  }
  if (!accounts.editionMintAuthority.value) {
    accounts.editionMintAuthority.value = expectSome(
      accounts.masterTokenAccountOwner.value
    );
  }
  if (!accounts.editionTokenRecord.value) {
    if (args.tokenStandard === TokenStandard.ProgrammableNonFungible) {
      accounts.editionTokenRecord.value = await findTokenRecordPda({
        mint: expectAddress(accounts.editionMint.value),
        token: expectAddress(accounts.editionTokenAccount.value),
      });
    }
  }
  if (!accounts.masterEdition.value) {
    accounts.masterEdition.value = await findMasterEditionPda({
      mint: expectSome(args.masterEditionMint),
    });
  }
  if (!accounts.masterMetadata.value) {
    accounts.masterMetadata.value = await findMetadataPda({
      mint: expectSome(args.masterEditionMint),
    });
  }
  if (!accounts.splTokenProgram.value) {
    accounts.splTokenProgram.value =
      'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA' as Address<'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA'>;
  }
  if (!accounts.splAtaProgram.value) {
    accounts.splAtaProgram.value =
      'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL' as Address<'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL'>;
  }
  if (!accounts.sysvarInstructions.value) {
    accounts.sysvarInstructions.value =
      'Sysvar1nstructions1111111111111111111111111' as Address<'Sysvar1nstructions1111111111111111111111111'>;
  }
  if (!accounts.systemProgram.value) {
    accounts.systemProgram.value =
      '11111111111111111111111111111111' as Address<'11111111111111111111111111111111'>;
  }

  // Get account metas and signers.
  const accountMetas = getAccountMetasWithSigners(
    accounts,
    'programId',
    programAddress
  );

  const instruction = getPrintV1InstructionRaw(
    accountMetas as Record<keyof AccountMetas, IAccountMeta>,
    args as PrintV1InstructionDataArgs,
    programAddress
  );

  return instruction;
}

export type PrintV1Input<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
> = {
  /** New Metadata key (pda of ['metadata', program id, mint id]) */
  editionMetadata: Address<TAccountEditionMetadata>;
  /** New Edition (pda of ['metadata', program id, mint id, 'edition']) */
  edition: Address<TAccountEdition>;
  /** Mint of new token - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY */
  editionMint: Address<TAccountEditionMint>;
  /** Owner of the token account of new token */
  editionTokenAccountOwner: Address<TAccountEditionTokenAccountOwner>;
  /** Token account of new token */
  editionTokenAccount: Address<TAccountEditionTokenAccount>;
  /** Mint authority of new mint */
  editionMintAuthority?: Address<TAccountEditionMintAuthority>;
  /** Token record account */
  editionTokenRecord?: Address<TAccountEditionTokenRecord>;
  /** Master Record Edition V2 (pda of ['metadata', program id, master metadata mint id, 'edition']) */
  masterEdition: Address<TAccountMasterEdition>;
  /** Edition pda to mark creation - will be checked for pre-existence. (pda of ['metadata', program id, master metadata mint id, 'edition', edition_number]) where edition_number is NOT the edition number you pass in args but actually edition_number = floor(edition/EDITION_MARKER_BIT_SIZE). */
  editionMarkerPda: Address<TAccountEditionMarkerPda>;
  /** payer */
  payer: Address<TAccountPayer>;
  /** owner of token account containing master token */
  masterTokenAccountOwner: Address<TAccountMasterTokenAccountOwner>;
  /** token account containing token from master metadata mint */
  masterTokenAccount: Address<TAccountMasterTokenAccount>;
  /** Master record metadata account */
  masterMetadata: Address<TAccountMasterMetadata>;
  /** The update authority of the master edition. */
  updateAuthority: Address<TAccountUpdateAuthority>;
  /** Token program */
  splTokenProgram?: Address<TAccountSplTokenProgram>;
  /** SPL Associated Token Account program */
  splAtaProgram?: Address<TAccountSplAtaProgram>;
  /** Instructions sysvar account */
  sysvarInstructions?: Address<TAccountSysvarInstructions>;
  /** System program */
  systemProgram?: Address<TAccountSystemProgram>;
  editionNumber: PrintV1InstructionDataArgs['editionNumber'];
  masterEditionMint: PrintV1InstructionExtraArgs['masterEditionMint'];
  tokenStandard: PrintV1InstructionExtraArgs['tokenStandard'];
};

export type PrintV1InputWithSigners<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
> = {
  /** New Metadata key (pda of ['metadata', program id, mint id]) */
  editionMetadata: Address<TAccountEditionMetadata>;
  /** New Edition (pda of ['metadata', program id, mint id, 'edition']) */
  edition: Address<TAccountEdition>;
  /** Mint of new token - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY */
  editionMint:
    | Address<TAccountEditionMint>
    | TransactionSigner<TAccountEditionMint>;
  /** Owner of the token account of new token */
  editionTokenAccountOwner: Address<TAccountEditionTokenAccountOwner>;
  /** Token account of new token */
  editionTokenAccount: Address<TAccountEditionTokenAccount>;
  /** Mint authority of new mint */
  editionMintAuthority?: TransactionSigner<TAccountEditionMintAuthority>;
  /** Token record account */
  editionTokenRecord?: Address<TAccountEditionTokenRecord>;
  /** Master Record Edition V2 (pda of ['metadata', program id, master metadata mint id, 'edition']) */
  masterEdition: Address<TAccountMasterEdition>;
  /** Edition pda to mark creation - will be checked for pre-existence. (pda of ['metadata', program id, master metadata mint id, 'edition', edition_number]) where edition_number is NOT the edition number you pass in args but actually edition_number = floor(edition/EDITION_MARKER_BIT_SIZE). */
  editionMarkerPda: Address<TAccountEditionMarkerPda>;
  /** payer */
  payer: TransactionSigner<TAccountPayer>;
  /** owner of token account containing master token */
  masterTokenAccountOwner: TransactionSigner<TAccountMasterTokenAccountOwner>;
  /** token account containing token from master metadata mint */
  masterTokenAccount: Address<TAccountMasterTokenAccount>;
  /** Master record metadata account */
  masterMetadata: Address<TAccountMasterMetadata>;
  /** The update authority of the master edition. */
  updateAuthority: Address<TAccountUpdateAuthority>;
  /** Token program */
  splTokenProgram?: Address<TAccountSplTokenProgram>;
  /** SPL Associated Token Account program */
  splAtaProgram?: Address<TAccountSplAtaProgram>;
  /** Instructions sysvar account */
  sysvarInstructions?: Address<TAccountSysvarInstructions>;
  /** System program */
  systemProgram?: Address<TAccountSystemProgram>;
  editionNumber: PrintV1InstructionDataArgs['editionNumber'];
  masterEditionMint: PrintV1InstructionExtraArgs['masterEditionMint'];
  tokenStandard: PrintV1InstructionExtraArgs['tokenStandard'];
};

export function getPrintV1Instruction<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
>(
  input: PrintV1InputWithSigners<
    TAccountEditionMetadata,
    TAccountEdition,
    TAccountEditionMint,
    TAccountEditionTokenAccountOwner,
    TAccountEditionTokenAccount,
    TAccountEditionMintAuthority,
    TAccountEditionTokenRecord,
    TAccountMasterEdition,
    TAccountEditionMarkerPda,
    TAccountPayer,
    TAccountMasterTokenAccountOwner,
    TAccountMasterTokenAccount,
    TAccountMasterMetadata,
    TAccountUpdateAuthority,
    TAccountSplTokenProgram,
    TAccountSplAtaProgram,
    TAccountSysvarInstructions,
    TAccountSystemProgram
  >
): PrintV1InstructionWithSigners<
  TProgram,
  TAccountEditionMetadata,
  TAccountEdition,
  (typeof input)['editionMint'] extends TransactionSigner<TAccountEditionMint>
    ? WritableSignerAccount<TAccountEditionMint> &
        IAccountSignerMeta<TAccountEditionMint>
    : TAccountEditionMint,
  TAccountEditionTokenAccountOwner,
  TAccountEditionTokenAccount,
  TAccountEditionMintAuthority,
  TAccountEditionTokenRecord,
  TAccountMasterEdition,
  TAccountEditionMarkerPda,
  TAccountPayer,
  TAccountMasterTokenAccountOwner,
  TAccountMasterTokenAccount,
  TAccountMasterMetadata,
  TAccountUpdateAuthority,
  TAccountSplTokenProgram,
  TAccountSplAtaProgram,
  TAccountSysvarInstructions,
  TAccountSystemProgram
>;
export function getPrintV1Instruction<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
>(
  input: PrintV1Input<
    TAccountEditionMetadata,
    TAccountEdition,
    TAccountEditionMint,
    TAccountEditionTokenAccountOwner,
    TAccountEditionTokenAccount,
    TAccountEditionMintAuthority,
    TAccountEditionTokenRecord,
    TAccountMasterEdition,
    TAccountEditionMarkerPda,
    TAccountPayer,
    TAccountMasterTokenAccountOwner,
    TAccountMasterTokenAccount,
    TAccountMasterMetadata,
    TAccountUpdateAuthority,
    TAccountSplTokenProgram,
    TAccountSplAtaProgram,
    TAccountSysvarInstructions,
    TAccountSystemProgram
  >
): PrintV1Instruction<
  TProgram,
  TAccountEditionMetadata,
  TAccountEdition,
  TAccountEditionMint,
  TAccountEditionTokenAccountOwner,
  TAccountEditionTokenAccount,
  TAccountEditionMintAuthority,
  TAccountEditionTokenRecord,
  TAccountMasterEdition,
  TAccountEditionMarkerPda,
  TAccountPayer,
  TAccountMasterTokenAccountOwner,
  TAccountMasterTokenAccount,
  TAccountMasterMetadata,
  TAccountUpdateAuthority,
  TAccountSplTokenProgram,
  TAccountSplAtaProgram,
  TAccountSysvarInstructions,
  TAccountSystemProgram
>;
export function getPrintV1Instruction<
  TAccountEditionMetadata extends string,
  TAccountEdition extends string,
  TAccountEditionMint extends string,
  TAccountEditionTokenAccountOwner extends string,
  TAccountEditionTokenAccount extends string,
  TAccountEditionMintAuthority extends string,
  TAccountEditionTokenRecord extends string,
  TAccountMasterEdition extends string,
  TAccountEditionMarkerPda extends string,
  TAccountPayer extends string,
  TAccountMasterTokenAccountOwner extends string,
  TAccountMasterTokenAccount extends string,
  TAccountMasterMetadata extends string,
  TAccountUpdateAuthority extends string,
  TAccountSplTokenProgram extends string,
  TAccountSplAtaProgram extends string,
  TAccountSysvarInstructions extends string,
  TAccountSystemProgram extends string,
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
>(
  input: PrintV1Input<
    TAccountEditionMetadata,
    TAccountEdition,
    TAccountEditionMint,
    TAccountEditionTokenAccountOwner,
    TAccountEditionTokenAccount,
    TAccountEditionMintAuthority,
    TAccountEditionTokenRecord,
    TAccountMasterEdition,
    TAccountEditionMarkerPda,
    TAccountPayer,
    TAccountMasterTokenAccountOwner,
    TAccountMasterTokenAccount,
    TAccountMasterMetadata,
    TAccountUpdateAuthority,
    TAccountSplTokenProgram,
    TAccountSplAtaProgram,
    TAccountSysvarInstructions,
    TAccountSystemProgram
  >
): IInstruction {
  // Program address.
  const programAddress =
    'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s' as Address<'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s'>;

  // Original accounts.
  type AccountMetas = Parameters<
    typeof getPrintV1InstructionRaw<
      TProgram,
      TAccountEditionMetadata,
      TAccountEdition,
      TAccountEditionMint,
      TAccountEditionTokenAccountOwner,
      TAccountEditionTokenAccount,
      TAccountEditionMintAuthority,
      TAccountEditionTokenRecord,
      TAccountMasterEdition,
      TAccountEditionMarkerPda,
      TAccountPayer,
      TAccountMasterTokenAccountOwner,
      TAccountMasterTokenAccount,
      TAccountMasterMetadata,
      TAccountUpdateAuthority,
      TAccountSplTokenProgram,
      TAccountSplAtaProgram,
      TAccountSysvarInstructions,
      TAccountSystemProgram
    >
  >[0];
  const accounts: Record<keyof AccountMetas, ResolvedAccount> = {
    editionMetadata: { value: input.editionMetadata ?? null, isWritable: true },
    edition: { value: input.edition ?? null, isWritable: true },
    editionMint: { value: input.editionMint ?? null, isWritable: true },
    editionTokenAccountOwner: {
      value: input.editionTokenAccountOwner ?? null,
      isWritable: false,
    },
    editionTokenAccount: {
      value: input.editionTokenAccount ?? null,
      isWritable: true,
    },
    editionMintAuthority: {
      value: input.editionMintAuthority ?? null,
      isWritable: false,
    },
    editionTokenRecord: {
      value: input.editionTokenRecord ?? null,
      isWritable: true,
    },
    masterEdition: { value: input.masterEdition ?? null, isWritable: true },
    editionMarkerPda: {
      value: input.editionMarkerPda ?? null,
      isWritable: true,
    },
    payer: { value: input.payer ?? null, isWritable: true },
    masterTokenAccountOwner: {
      value: input.masterTokenAccountOwner ?? null,
      isWritable: false,
    },
    masterTokenAccount: {
      value: input.masterTokenAccount ?? null,
      isWritable: false,
    },
    masterMetadata: { value: input.masterMetadata ?? null, isWritable: false },
    updateAuthority: {
      value: input.updateAuthority ?? null,
      isWritable: false,
    },
    splTokenProgram: {
      value: input.splTokenProgram ?? null,
      isWritable: false,
    },
    splAtaProgram: { value: input.splAtaProgram ?? null, isWritable: false },
    sysvarInstructions: {
      value: input.sysvarInstructions ?? null,
      isWritable: false,
    },
    systemProgram: { value: input.systemProgram ?? null, isWritable: false },
  };

  // Original args.
  const args = { ...input };

  // Resolve default values.
  if (!accounts.editionMintAuthority.value) {
    accounts.editionMintAuthority.value = expectSome(
      accounts.masterTokenAccountOwner.value
    );
  }
  if (!accounts.splTokenProgram.value) {
    accounts.splTokenProgram.value =
      'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA' as Address<'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA'>;
  }
  if (!accounts.splAtaProgram.value) {
    accounts.splAtaProgram.value =
      'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL' as Address<'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL'>;
  }
  if (!accounts.sysvarInstructions.value) {
    accounts.sysvarInstructions.value =
      'Sysvar1nstructions1111111111111111111111111' as Address<'Sysvar1nstructions1111111111111111111111111'>;
  }
  if (!accounts.systemProgram.value) {
    accounts.systemProgram.value =
      '11111111111111111111111111111111' as Address<'11111111111111111111111111111111'>;
  }

  // Get account metas and signers.
  const accountMetas = getAccountMetasWithSigners(
    accounts,
    'programId',
    programAddress
  );

  const instruction = getPrintV1InstructionRaw(
    accountMetas as Record<keyof AccountMetas, IAccountMeta>,
    args as PrintV1InstructionDataArgs,
    programAddress
  );

  return instruction;
}

export function getPrintV1InstructionRaw<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountEditionMetadata extends string | IAccountMeta<string> = string,
  TAccountEdition extends string | IAccountMeta<string> = string,
  TAccountEditionMint extends string | IAccountMeta<string> = string,
  TAccountEditionTokenAccountOwner extends
    | string
    | IAccountMeta<string> = string,
  TAccountEditionTokenAccount extends string | IAccountMeta<string> = string,
  TAccountEditionMintAuthority extends string | IAccountMeta<string> = string,
  TAccountEditionTokenRecord extends string | IAccountMeta<string> = string,
  TAccountMasterEdition extends string | IAccountMeta<string> = string,
  TAccountEditionMarkerPda extends string | IAccountMeta<string> = string,
  TAccountPayer extends string | IAccountMeta<string> = string,
  TAccountMasterTokenAccountOwner extends
    | string
    | IAccountMeta<string> = string,
  TAccountMasterTokenAccount extends string | IAccountMeta<string> = string,
  TAccountMasterMetadata extends string | IAccountMeta<string> = string,
  TAccountUpdateAuthority extends string | IAccountMeta<string> = string,
  TAccountSplTokenProgram extends
    | string
    | IAccountMeta<string> = 'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA',
  TAccountSplAtaProgram extends
    | string
    | IAccountMeta<string> = 'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL',
  TAccountSysvarInstructions extends
    | string
    | IAccountMeta<string> = 'Sysvar1nstructions1111111111111111111111111',
  TAccountSystemProgram extends
    | string
    | IAccountMeta<string> = '11111111111111111111111111111111',
  TRemainingAccounts extends Array<IAccountMeta<string>> = [],
>(
  accounts: {
    editionMetadata: TAccountEditionMetadata extends string
      ? Address<TAccountEditionMetadata>
      : TAccountEditionMetadata;
    edition: TAccountEdition extends string
      ? Address<TAccountEdition>
      : TAccountEdition;
    editionMint: TAccountEditionMint extends string
      ? Address<TAccountEditionMint>
      : TAccountEditionMint;
    editionTokenAccountOwner: TAccountEditionTokenAccountOwner extends string
      ? Address<TAccountEditionTokenAccountOwner>
      : TAccountEditionTokenAccountOwner;
    editionTokenAccount: TAccountEditionTokenAccount extends string
      ? Address<TAccountEditionTokenAccount>
      : TAccountEditionTokenAccount;
    editionMintAuthority: TAccountEditionMintAuthority extends string
      ? Address<TAccountEditionMintAuthority>
      : TAccountEditionMintAuthority;
    editionTokenRecord?: TAccountEditionTokenRecord extends string
      ? Address<TAccountEditionTokenRecord>
      : TAccountEditionTokenRecord;
    masterEdition: TAccountMasterEdition extends string
      ? Address<TAccountMasterEdition>
      : TAccountMasterEdition;
    editionMarkerPda: TAccountEditionMarkerPda extends string
      ? Address<TAccountEditionMarkerPda>
      : TAccountEditionMarkerPda;
    payer: TAccountPayer extends string
      ? Address<TAccountPayer>
      : TAccountPayer;
    masterTokenAccountOwner: TAccountMasterTokenAccountOwner extends string
      ? Address<TAccountMasterTokenAccountOwner>
      : TAccountMasterTokenAccountOwner;
    masterTokenAccount: TAccountMasterTokenAccount extends string
      ? Address<TAccountMasterTokenAccount>
      : TAccountMasterTokenAccount;
    masterMetadata: TAccountMasterMetadata extends string
      ? Address<TAccountMasterMetadata>
      : TAccountMasterMetadata;
    updateAuthority: TAccountUpdateAuthority extends string
      ? Address<TAccountUpdateAuthority>
      : TAccountUpdateAuthority;
    splTokenProgram?: TAccountSplTokenProgram extends string
      ? Address<TAccountSplTokenProgram>
      : TAccountSplTokenProgram;
    splAtaProgram?: TAccountSplAtaProgram extends string
      ? Address<TAccountSplAtaProgram>
      : TAccountSplAtaProgram;
    sysvarInstructions?: TAccountSysvarInstructions extends string
      ? Address<TAccountSysvarInstructions>
      : TAccountSysvarInstructions;
    systemProgram?: TAccountSystemProgram extends string
      ? Address<TAccountSystemProgram>
      : TAccountSystemProgram;
  },
  args: PrintV1InstructionDataArgs,
  programAddress: Address<TProgram> = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s' as Address<TProgram>,
  remainingAccounts?: TRemainingAccounts
) {
  return {
    accounts: [
      accountMetaWithDefault(accounts.editionMetadata, AccountRole.WRITABLE),
      accountMetaWithDefault(accounts.edition, AccountRole.WRITABLE),
      accountMetaWithDefault(accounts.editionMint, AccountRole.WRITABLE),
      accountMetaWithDefault(
        accounts.editionTokenAccountOwner,
        AccountRole.READONLY
      ),
      accountMetaWithDefault(
        accounts.editionTokenAccount,
        AccountRole.WRITABLE
      ),
      accountMetaWithDefault(
        accounts.editionMintAuthority,
        AccountRole.READONLY_SIGNER
      ),
      accountMetaWithDefault(
        accounts.editionTokenRecord ?? {
          address:
            'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s' as Address<'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s'>,
          role: AccountRole.READONLY,
        },
        AccountRole.WRITABLE
      ),
      accountMetaWithDefault(accounts.masterEdition, AccountRole.WRITABLE),
      accountMetaWithDefault(accounts.editionMarkerPda, AccountRole.WRITABLE),
      accountMetaWithDefault(accounts.payer, AccountRole.WRITABLE_SIGNER),
      accountMetaWithDefault(
        accounts.masterTokenAccountOwner,
        AccountRole.READONLY_SIGNER
      ),
      accountMetaWithDefault(accounts.masterTokenAccount, AccountRole.READONLY),
      accountMetaWithDefault(accounts.masterMetadata, AccountRole.READONLY),
      accountMetaWithDefault(accounts.updateAuthority, AccountRole.READONLY),
      accountMetaWithDefault(
        accounts.splTokenProgram ??
          ('TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA' as Address<'TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA'>),
        AccountRole.READONLY
      ),
      accountMetaWithDefault(
        accounts.splAtaProgram ??
          ('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL' as Address<'ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL'>),
        AccountRole.READONLY
      ),
      accountMetaWithDefault(
        accounts.sysvarInstructions ??
          ('Sysvar1nstructions1111111111111111111111111' as Address<'Sysvar1nstructions1111111111111111111111111'>),
        AccountRole.READONLY
      ),
      accountMetaWithDefault(
        accounts.systemProgram ??
          ('11111111111111111111111111111111' as Address<'11111111111111111111111111111111'>),
        AccountRole.READONLY
      ),
      ...(remainingAccounts ?? []),
    ],
    data: getPrintV1InstructionDataEncoder().encode(args),
    programAddress,
  } as PrintV1Instruction<
    TProgram,
    TAccountEditionMetadata,
    TAccountEdition,
    TAccountEditionMint,
    TAccountEditionTokenAccountOwner,
    TAccountEditionTokenAccount,
    TAccountEditionMintAuthority,
    TAccountEditionTokenRecord,
    TAccountMasterEdition,
    TAccountEditionMarkerPda,
    TAccountPayer,
    TAccountMasterTokenAccountOwner,
    TAccountMasterTokenAccount,
    TAccountMasterMetadata,
    TAccountUpdateAuthority,
    TAccountSplTokenProgram,
    TAccountSplAtaProgram,
    TAccountSysvarInstructions,
    TAccountSystemProgram,
    TRemainingAccounts
  >;
}

export type ParsedPrintV1Instruction<
  TProgram extends string = 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',
  TAccountMetas extends readonly IAccountMeta[] = readonly IAccountMeta[],
> = {
  programAddress: Address<TProgram>;
  accounts: {
    /** New Metadata key (pda of ['metadata', program id, mint id]) */
    editionMetadata: TAccountMetas[0];
    /** New Edition (pda of ['metadata', program id, mint id, 'edition']) */
    edition: TAccountMetas[1];
    /** Mint of new token - THIS WILL TRANSFER AUTHORITY AWAY FROM THIS KEY */
    editionMint: TAccountMetas[2];
    /** Owner of the token account of new token */
    editionTokenAccountOwner: TAccountMetas[3];
    /** Token account of new token */
    editionTokenAccount: TAccountMetas[4];
    /** Mint authority of new mint */
    editionMintAuthority: TAccountMetas[5];
    /** Token record account */
    editionTokenRecord?: TAccountMetas[6] | undefined;
    /** Master Record Edition V2 (pda of ['metadata', program id, master metadata mint id, 'edition']) */
    masterEdition: TAccountMetas[7];
    /** Edition pda to mark creation - will be checked for pre-existence. (pda of ['metadata', program id, master metadata mint id, 'edition', edition_number]) where edition_number is NOT the edition number you pass in args but actually edition_number = floor(edition/EDITION_MARKER_BIT_SIZE). */
    editionMarkerPda: TAccountMetas[8];
    /** payer */
    payer: TAccountMetas[9];
    /** owner of token account containing master token */
    masterTokenAccountOwner: TAccountMetas[10];
    /** token account containing token from master metadata mint */
    masterTokenAccount: TAccountMetas[11];
    /** Master record metadata account */
    masterMetadata: TAccountMetas[12];
    /** The update authority of the master edition. */
    updateAuthority: TAccountMetas[13];
    /** Token program */
    splTokenProgram: TAccountMetas[14];
    /** SPL Associated Token Account program */
    splAtaProgram: TAccountMetas[15];
    /** Instructions sysvar account */
    sysvarInstructions: TAccountMetas[16];
    /** System program */
    systemProgram: TAccountMetas[17];
  };
  data: PrintV1InstructionData;
};

export function parsePrintV1Instruction<
  TProgram extends string,
  TAccountMetas extends readonly IAccountMeta[],
>(
  instruction: IInstruction<TProgram> &
    IInstructionWithAccounts<TAccountMetas> &
    IInstructionWithData<Uint8Array>
): ParsedPrintV1Instruction<TProgram, TAccountMetas> {
  if (instruction.accounts.length < 18) {
    // TODO: Coded error.
    throw new Error('Not enough accounts');
  }
  let accountIndex = 0;
  const getNextAccount = () => {
    const accountMeta = instruction.accounts![accountIndex]!;
    accountIndex += 1;
    return accountMeta;
  };
  const getNextOptionalAccount = () => {
    const accountMeta = getNextAccount();
    return accountMeta.address === 'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s'
      ? undefined
      : accountMeta;
  };
  return {
    programAddress: instruction.programAddress,
    accounts: {
      editionMetadata: getNextAccount(),
      edition: getNextAccount(),
      editionMint: getNextAccount(),
      editionTokenAccountOwner: getNextAccount(),
      editionTokenAccount: getNextAccount(),
      editionMintAuthority: getNextAccount(),
      editionTokenRecord: getNextOptionalAccount(),
      masterEdition: getNextAccount(),
      editionMarkerPda: getNextAccount(),
      payer: getNextAccount(),
      masterTokenAccountOwner: getNextAccount(),
      masterTokenAccount: getNextAccount(),
      masterMetadata: getNextAccount(),
      updateAuthority: getNextAccount(),
      splTokenProgram: getNextAccount(),
      splAtaProgram: getNextAccount(),
      sysvarInstructions: getNextAccount(),
      systemProgram: getNextAccount(),
    },
    data: getPrintV1InstructionDataDecoder().decode(instruction.data),
  };
}
