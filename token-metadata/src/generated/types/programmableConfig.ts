/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */

import {
  Address,
  getAddressDecoder,
  getAddressEncoder,
} from '@solana/addresses';
import {
  Codec,
  Decoder,
  Encoder,
  GetDataEnumKind,
  GetDataEnumKindContent,
  Option,
  OptionOrNullable,
  combineCodec,
  getDataEnumDecoder,
  getDataEnumEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
} from '@solana/codecs';

export type ProgrammableConfig = { __kind: 'V1'; ruleSet: Option<Address> };

export type ProgrammableConfigArgs = {
  __kind: 'V1';
  ruleSet: OptionOrNullable<Address>;
};

export function getProgrammableConfigEncoder(): Encoder<ProgrammableConfigArgs> {
  return getDataEnumEncoder([
    [
      'V1',
      getStructEncoder([['ruleSet', getOptionEncoder(getAddressEncoder())]]),
    ],
  ]);
}

export function getProgrammableConfigDecoder(): Decoder<ProgrammableConfig> {
  return getDataEnumDecoder([
    [
      'V1',
      getStructDecoder([['ruleSet', getOptionDecoder(getAddressDecoder())]]),
    ],
  ]);
}

export function getProgrammableConfigCodec(): Codec<
  ProgrammableConfigArgs,
  ProgrammableConfig
> {
  return combineCodec(
    getProgrammableConfigEncoder(),
    getProgrammableConfigDecoder()
  );
}

// Data Enum Helpers.
export function programmableConfig(
  kind: 'V1',
  data: GetDataEnumKindContent<ProgrammableConfigArgs, 'V1'>
): GetDataEnumKind<ProgrammableConfigArgs, 'V1'>;
export function programmableConfig<K extends ProgrammableConfigArgs['__kind']>(
  kind: K,
  data?: any
): Extract<ProgrammableConfigArgs, { __kind: K }> {
  return Array.isArray(data)
    ? { __kind: kind, fields: data }
    : { __kind: kind, ...(data ?? {}) };
}

export function isProgrammableConfig<K extends ProgrammableConfig['__kind']>(
  kind: K,
  value: ProgrammableConfig
): value is ProgrammableConfig & { __kind: K } {
  return value.__kind === kind;
}
